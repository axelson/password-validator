name: CI

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      MIX_ENV: test

    strategy:
      fail-fast: false
      matrix:
        include:
          - elixir: 1.11.3
            otp: 23.2.2

    steps:
    - uses: actions/checkout@v1
    - uses: erlef/setup-beam@v1
      with:
        otp-version: ${{matrix.otp}}
        elixir-version: ${{matrix.elixir}}
        disable_problem_matchers: true
    - name: Cache deps
      uses: actions/cache@v2
      with:
        path: |
          ~/.hex
          ~/.mix
          deps
        key: ${{ runner.os }}-${{ matrix.elixir }}-${{ matrix.otp }}-mix-${{ hashFiles('**/mix.lock') }}
        restoreCache: ${{ runner.os }}-${{ matrix.elixir }}-${{ matrix.otp }}-mix-
    - name: Set the config cache value
      id: step_one
      run: |
        echo "action_state=${mix config.hash}" >> $GITHUB_EN
    - run: env
    - name: Cache build artifacts
      uses: actions/cache@v2
      with:
        path: |
          _build
          priv/plts
        key: ${{ runner.os }}-mix-${{ hashFiles('**/mix.lock') }}
    - name: Install Dependencies
      run: |
        mix local.rebar --force
        mix local.hex --force
        mix deps.get
    - name: Compile Deps
      run: mix deps.compile
    - name: Compile
      run: mix compile.machine --warnings-as-errors
    - name: Run Tests
      run: mix test
      if: always()
    - name: Run docception
      run: MIX_ENV=test mix docception README.md
      if: always()
    - name: Credo
      run: MIX_ENV=test mix credo --strict
      if: always()
    - name: Formatting
      run: MIX_ENV=test mix format --check-formatted
      if: always()
    - run: ls
      if: always()
    - run: find . -name "report.json"
      if: always()
    # - name: Dialyzer
    #   run: MIX_ENV=test mix dialyzer --halt-exit-status
    #   if: always()
    - name: Upload Sarif
      uses: github/codeql-action/upload-sarif@v1
      if: always()
      with:
        sarif_file: report.json
